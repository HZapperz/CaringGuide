// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "darwin"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id                    String      @id
  // personal Details
  firstName             String
  middleName            String?
  lastName              String
  dob                   DateTime
  gender                String
  avatar                String?
  // Common Details
  experience            Experience?
  condition             Disease?
  // Mentor
  about                 String?
  // Mentee
  patientName           String?
  synopsis              String?
  relationShipToPatient String?
  city                  String?
  country               String?

  // Contact Details
  email String
  phone String

  role      Role
  favorites UserFavourites[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mentees  MentorMenteeMatch[] @relation(name: "Mentors")
  mentor   MentorMenteeMatch?  @relation(name: "Mentee")
  journals Journal[]
}

model MentorMenteeMatch {
  id       String @id @default(uuid())
  menteeId String @unique
  mentorId String

  mentor Profile @relation(name: "Mentors", fields: [mentorId], references: [id], onDelete: Cascade)
  mentee Profile @relation(name: "Mentee", fields: [menteeId], references: [id], onDelete: Cascade)
}

model Journal {
  id          String @id @default(uuid())
  authorId    String
  title       String
  description String

  author Profile  @relation(fields: [authorId], references: [id], onDelete: Cascade)
  time   DateTime @default(now())
}

model Resources {
  id          String   @id @default(uuid())
  title       String
  description String
  link        String
  category    Category
  image       String
  disease     Disease

  favoritedBy UserFavourites[]
}

model UserFavourites {
  id         String  @id @default(uuid())
  userId     String
  resourceId String
  isStarred  Boolean
  isLiked    Boolean
  isDisliked Boolean

  user     Profile   @relation(fields: [userId], references: [id], onDelete: Cascade)
  resource Resources @relation(fields: [resourceId], references: [id], onDelete: Cascade)
}

model InviteCode {
  code      String   @id
  createdAt DateTime @default(now())
}

enum Role {
  MENTOR
  MENTEE
  ADMIN
}

enum Experience {
  LESS_THAN_2
  BETWEEN_2_AND_4
  MORE_THAN_4
}

enum Disease {
  MYELOMA
  ALZHEIMER
  PARKINSON
  STROKE
  ALS
  UNKNOWN
}

enum Category {
  GENERAL
  PHYSICAL
  EMOTIONAL
  HOME_CARE
  FINANCIAL_LEGAL
  END_OF_LIFE
}
